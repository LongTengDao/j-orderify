/*!
 * 模块名称：@ltd/j-orderify
 * 模块功能：返回一个能保证给定对象的属性按此后添加顺序排列的 proxy，即使键名是 symbol，或整数 string。
   　　　　　Return a proxy for given object, which can guarantee own keys are in setting order, even if the key name is symbol or int string.
 * 模块版本：3.0.0
 * 许可条款：LGPL-3.0
 * 所属作者：龙腾道 <LongTengDao@LongTengDao.com> (www.LongTengDao.com)
 * 问题反馈：https://GitHub.com/LongTengDao/j-orderify/issues
 * 项目主页：https://GitHub.com/LongTengDao/j-orderify/
 */
(function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self).orderify=t()})(this,function(){"use strict";const e=Object.create,t=Object.assign,n=Reflect.defineProperty,r=Reflect.deleteProperty,o=Reflect.ownKeys,c=Reflect.construct,f=new WeakMap,d=t(e(null),{defineProperty:(e,t,r)=>!!n(e,t,r)&&(f.get(e).add(t),!0),deleteProperty:(e,t)=>!!r(e,t)&&(f.get(e).delete(t),!0),ownKeys:e=>[...f.get(e)]}),{of:s}={of:e=>(f.set(e,new Set(o(e))),new Proxy(e,d))},{create:u}={create(t){const n=e(t);return f.set(n,new Set),new Proxy(n,d)}},{extend:i}={extend:n=>new Proxy(n,t(e(null),{construct(e,t){const n=c(e,t);return f.set(n,new Set(o(n))),new Proxy(n,d)}}))};return{version:"3.0.0",of:s,create:u,extend:i,get default(){return this}}});
//# sourceMappingURL=j-orderify.min.js.map